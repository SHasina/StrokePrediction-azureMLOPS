name: Test
on:
  push:
    branches:
      - prod
  # workflow_dispatch:
  #   inputs:
  #     required: true
  #     description: allowed manual deployment
  #     default: execute
jobs:
  # job1:
  #   name: Run test
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - id: step1
  #       name: checkout
  #       uses: actions/checkout@v2
  #     - id: step2
  #       name: download and setup python version
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: 3.10.0
  #         cache: pip
  #     - id: step3
  #       name: Install packages
  #       shell: bash
  #       run: |
  #         pip install -r requirements.txt
  #     - id: step4
  #       name: build and test model
  #       shell: bash
  #       run: |
  #         pytest -v -s
  # job2:
  #   name: Build and save model as artifact
  #   runs-on: ubuntu-20.04
  #   needs: [job1]
  #   steps:
  #     - id: step1
  #       name: checkout
  #       uses: actions/checkout@v2
  #     - id: step2
  #       name: download and setup python version
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: 3.10.0
  #         cache: pip
  #     - id: step3
  #       name: Install packages
  #       shell: bash
  #       run: |
  #         pip install -r requirements.txt
  #     - id: step4
  #       name: Build model
  #       shell: bash
  #       run: |
  #         python3 build.py
  #     - id: step5
  #       name: Upload model as artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: model
  #         path: model.pkl
  #         retention-days: 1
  job4:
    name: deploy machine learning model
    runs-on: ubuntu-latest
    # needs: [job2]
    env:
      CONTAINER_APP_NAME: msk-dev-signup
    steps:

      - id: step1
        name: checkout
        uses: actions/checkout@v3

      - id: step2
        name: azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - id: step3
        name: install container app extension
        shell: bash
        run: |
          az extension add -n containerapp

      - id: step4
        name: Get containerapp name
        continue-on-error: true
        shell: bash
        run: |

          OUTPUT=$(az containerapp show --name $CONTAINER_APP_NAME --resource-group $CONTAINER_APP_NAME --query "name" -o tsv | tr -d '[:space:]')
          echo "::set-output name=OUTPUT::$OUTPUT"          

      - id: step5
        if: ${{ steps.step3.outputs.OUTPUT == env.CONTAINER_APP_NAME }}
        name: Update containerapp if exists
        shell: bash
        run: |
          echo "Update old containerapp"
      
      - id: step6
        if: ${{ steps.step3.outputs.OUTPUT != env.CONTAINER_APP_NAME }}
        name: Deploy new containerapp if not exists
        shell: bash
        run: |
          echo "Deploy new containerapp"